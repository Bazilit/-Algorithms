def bracket_generator(count, left, right, prefix):
    if left == 0 and right == 0:
        print(prefix)
    else:
        if left > 0:
            bracket_generator(count + 1, left - 1, right, prefix + '(')
        if (count > 0 and right > 0):
            bracket_generator(count - 1, left, right - 1, prefix + ')')

count_parentheses = int(input())
count = 0
left = count_parentheses
right = count_parentheses
bracket_generator(count, left, right, '')

# Рита по поручению Тимофея наводит порядок в правильных скобочных последовательностях (ПСП), состоящих только из круглых скобок (). Для этого ей надо сгенерировать все ПСП длины 2n в алфавитном порядке —– алфавит состоит из ( и ) и открывающая скобка идёт раньше закрывающей.
# Помогите Рите —– напишите программу, которая по заданному n выведет все ПСП в нужном порядке.
# Рассмотрим второй пример. Надо вывести ПСП из четырёх символов. Таких всего две:

# (())
# ()()
# (()) идёт раньше ()(), так как первый символ у них одинаковый, а на второй позиции у первой ПСП стоит (, который идёт раньше ).

# Формат ввода
# На вход функция принимает n — целое число от 0 до 10.

# Формат вывода
# Функция должна напечатать все возможные скобочные последовательности заданной длины в алфавитном (лексикографическом) порядке.

# Пример 1
# Ввод	Вывод
# 3

# Вывод
# ((()))
# (()())
# (())()
# ()(())
# ()()()
