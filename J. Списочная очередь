# Node это коробка под кошку. В нее помешаем значения узла
class CatBox:
    def __init__(self, data=None, next=None):
        self.data = data
        self.next = next

    def __str__(self):
        return self.data
        
# Сам связанный список. В нем отслеживаем голову, хвост и содержится счетчик
class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None
        self.size = 0

    def __str__(self):
        return str(self.head)

    def get(self):
        if self.size == 0:
            return 'error'
        header = self.head.data
        self.head = self.head.next
        self.size -= 1
        return header

    def put(self, x):
        new_cat_box = CatBox(x)
        if self.head is None:
            self.head = new_cat_box
            self.tail = new_cat_box
        else:
            self.tail.next = new_cat_box
            self.tail = new_cat_box
        self.size += 1
        return self.head

def list_commands(number_commands, commands):
    turn = LinkedList()
    for number in range(number_commands):
        if 'get' in commands[number]:
            print(turn.get())
        elif 'size' in commands[number]:
            print(turn.size)
        elif 'put' in commands[number]:
            turn.put(int(commands[number][1]))

if __name__ == '__main__':
    number_commands = int(input())
    commands = []
    for i in range(number_commands):
        command = input().split()
        commands.append(command)
    list_commands(number_commands, commands)
    
    
# Любимый вариант очереди Тимофея — очередь, написанная с использованием связного списка. Помогите ему с реализацией. Очередь должна поддерживать выполнение трёх команд:

# get() — вывести элемент, находящийся в голове очереди, и удалить его. Если очередь пуста, то вывести «error».
# put(x) — добавить число x в очередь
# size() — вывести текущий размер очереди
# Формат ввода
# В первой строке записано количество команд n — целое число, не превосходящее 1000. В каждой из следующих n строк записаны команды по одной строке.

# Формат вывода
# Выведите ответ на каждый запрос по одному в строке.

# Пример 1
# Ввод
# 10
# put -34
# put -23
# get
# size
# get
# size
# get
# get
# put 80
# size

# Вывод
# -34
# 1
# -23
# 0
# error
# error
# 1
