class Stack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()


def brace_check(s):
	stack = Stack()
	for brace in s:
		if brace not in "(){}[]":
			continue
		if brace in "{[(":
			stack.push(brace)
		else:
			assert brace in ")]}", "Ожидалась закрывающая скобка" + str(brace)
			if stack.is_empty():
				return False
			left = stack.pop()
			assert left in "([{", "Ожидалась открывающая скобка" + str(brace)
			if left == "(":
				right = ")"
			elif left == "{":
				right = "}"
			elif left == "[":
				right = "]"
			if right != brace:
				return False
	if stack.is_empty():
		return True
	else:
		return False

s = input()
print(brace_check(s))

# Формат ввода
# На вход подаётся одна строка, содержащая скобочную последовательность. Скобки записаны подряд, без пробелов.

# Формат вывода
# Выведите «True» или «False».

# Пример 1
# Ввод
# {[()]}

# Вывод
# True
